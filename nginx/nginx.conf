server {
    listen 4337 default_server;
    location /
    {
        auth_basic             "Restricted";
        auth_basic_user_file   .htpasswd;
        proxy_pass             "${DAGSTER_ENPOINT_URL}";
    }
}

server {
    listen 5000;
    location /
    {
        auth_basic             "Restricted";
        auth_basic_user_file   .htpasswd;
        proxy_pass             "${MLFLOW_ENPOINT_URL}";
    }
}

server {
    listen 80;
    listen [::]:80;
    root /var/www/html;
    index index.html;
    server_name oo-serv.ru www.oo-serv.ru;
    server_tokens off;
    location ~ /.well-known/acme-challenge {
            allow all;
            root /var/www/html;
    }
    location / {
        return 301 https://oo-serv.ru$request_uri;
    }
}

server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;
    server_name oo-serv.ru;
    ssl_certificate /etc/letsencrypt/live/oo-serv.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/oo-serv.ru/privkey.pem;
    location /
    {
        allow all;
        root /var/www/html;
        auth_basic             "Restricted";
        auth_basic_user_file   .htpasswd;
        # proxy_pass             "${DAGSTER_ENPOINT_URL}";
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        # add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
        # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        # enable strict transport security only if you understand the implications
    }
}
